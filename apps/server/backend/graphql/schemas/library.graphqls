type LibraryMin {
  id: ID!
  name: String!
}

input BookFilterParams {
  isRead: Boolean
  attributes: [BookFilterAttributeParams!]
}

input BookFilterAttributeParams {
  id: ID!
  value: String!
}

type Library {
  id: ID!
  name: String!
  rootDir: String!
  books(filter: BookFilterParams): [Book!]!
  attributes: [BookAttributeSettingUnion!]!
}

extend type Query {
  libraries: [LibraryMin!]!
  library(id: ID!): Library!
}

input LibraryCreateInput {
  name: String
  rootDir: String!
}

input LibraryUpdateInput {
  name: String
}

extend type Mutation {
  createLibrary(input: LibraryCreateInput!, attributesInput: [BookAttributeSettingCreateInput!]): ID!
  updateLibrary(id: ID!, input: LibraryUpdateInput!): ID!
  createBookAttributeSettings(libraryId: ID!, input: [BookAttributeSettingCreateInput!]): [ID!]!
  updateBookAttributeSettings(libraryId: ID!, input: [BookAttributeSettingUpdateInput!]): [ID!]!
  deleteBookAttributeTag(libraryId: ID!, attributeId: ID!, tag: String!): String!
  #deleteLibrary
}